NoSQL (awalnya mengacu pada database "non-SQL" atau "non-relasional") menyediakan mekanisme untuk penyimpanan dan pengambilan data yang dimodelkan dengan cara selain hubungan tabular yang digunakan dalam database relasional. Database semacam itu sudah ada sejak akhir 1960-an, tetapi nama "NoSQL" baru diciptakan pada awal abad ke-21, dipicu oleh kebutuhan perusahaan Web 2.0. Basis data NoSQL semakin banyak digunakan dalam data besar dan aplikasi web real-time. Sistem NoSQL juga kadang-kadang disebut Tidak hanya SQL untuk menekankan bahwa mereka mungkin mendukung bahasa kueri seperti SQL atau duduk berdampingan dengan database SQL dalam arsitektur yang gigih poliglot.

Motivasi untuk pendekatan ini mencakup kesederhanaan desain, penskalaan "horizontal" yang lebih sederhana untuk kelompok mesin (yang merupakan masalah untuk database relasional), kontrol yang lebih baik atas ketersediaan dan membatasi ketidaksesuaian impedansi objek-relasional. Struktur data yang digunakan oleh database NoSQL (mis. pasangan kunci-nilai, kolom lebar, grafik, atau dokumen) berbeda dari yang digunakan secara default di database relasional, membuat beberapa operasi lebih cepat di NoSQL. Kesesuaian tertentu dari database NoSQL yang diberikan bergantung pada masalah yang harus diselesaikannya. Terkadang struktur data yang digunakan oleh database NoSQL juga dipandang "lebih fleksibel" daripada tabel database relasional.

Banyak NoSQL menyimpan konsistensi kompromi (dalam pengertian teorema CAP) demi ketersediaan, toleransi partisi, dan kecepatan. Hambatan untuk adopsi yang lebih besar dari toko NoSQL termasuk penggunaan bahasa kueri tingkat rendah (alih-alih SQL, misalnya), kurangnya kemampuan untuk melakukan gabungan ad hoc di seluruh tabel, kurangnya antarmuka standar, dan investasi besar sebelumnya dalam basis data relasional yang ada . Sebagian besar toko NoSQL tidak memiliki transaksi ACID yang sebenarnya, meskipun beberapa database menjadikannya pusat desain mereka.

Sebagai gantinya, sebagian besar database NoSQL menawarkan konsep "konsistensi akhir", di mana perubahan database disebarkan ke semua node "pada akhirnya" (biasanya dalam milidetik), sehingga kueri untuk data mungkin tidak segera mengembalikan data yang diperbarui atau mungkin menghasilkan pembacaan data yang tidak akurat, masalah yang dikenal sebagai membaca basi. Selain itu, beberapa sistem NoSQL mungkin menunjukkan penulisan yang hilang dan bentuk kehilangan data lainnya. Beberapa sistem NoSQL menyediakan konsep seperti write-ahead logging untuk menghindari kehilangan data. Untuk pemrosesan transaksi terdistribusi di beberapa basis data, konsistensi data merupakan tantangan yang lebih besar yang sulit bagi NoSQL dan basis data relasional. Basis data relasional "tidak mengizinkan batasan integritas referensial ke rentang basis data". Beberapa sistem mempertahankan transaksi ACID dan standar X/Open XA untuk pemrosesan transaksi terdistribusi. Database relasional interaktif berbagi teknik analisis relai konformasi sebagai fitur umum. Keterbatasan dalam lingkungan antarmuka diatasi dengan menggunakan protokol virtualisasi semantik, sehingga layanan NoSQL dapat diakses oleh sebagian besar sistem operasi.